head	1.1;
branch	1.1.1;
access;
symbols
	asst1-end:1.1.1.1
	asst1-begin:1.1.1.1
	asst0-end:1.1.1.1
	os161-1_11:1.1.1.1
	os161:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.09.11.01.49.17;	author xwang26;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2015.09.11.01.49.17;	author xwang26;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@<html>
<head>
<title>hash</title>
<body bgcolor=#ffffff>
<h2 align=center>hash</h2>
<h4 align=center>OS/161 Reference Manual</h4>

<h3>Name</h3>
hash - compute a simple hash function of a file

<h3>Synopsis</h3>
/testbin/hash <em>file</em>
<br>
host-hash <em>file</em>

<h3>Description</h3>

hash takes a file and computes a hash value for it by adding all the
bytes in the file together modulo a prime.
<p>

hash is by default also compiled for the System/161 host OS so you can
cross-check the answers you get.

<h3>Requirements</h3>

hash uses the following system calls:
<ul>
<li> <A HREF=../syscall/open.html>open</A>
<li> <A HREF=../syscall/read.html>read</A>
<li> <A HREF=../syscall/write.html>write</A>
<li> <A HREF=../syscall/close.html>close</A>
<li> <A HREF=../syscall/_exit.html>_exit</A>
</ul>

Once the basic system calls are complete, hash should work on any file
the system supports. However, it will probably of most use for testing
while working on the file system assignment.

</body>
</html>
@


1.1.1.1
log
@Import of os161
@
text
@@
